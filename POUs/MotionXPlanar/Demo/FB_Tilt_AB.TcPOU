<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="FB_Tilt_AB" Id="{e2447b9a-4dbb-4a10-aa3c-becd1202ca4a}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FINAL FB_Tilt_AB EXTENDS FB_StatusExecuteFB IMPLEMENTS ITF_ExtendsFB
VAR_IN_OUT
	fbMover								: MC_PlanarMover;
END_VAR
VAR_INPUT
	Execute								: BOOL;
	Position							: DUT_Position;
	Velocity							: LREAL;
	Acceleration						: LREAL;
	Deceleration						: LREAL;
	Jerk								: LREAL;
END_VAR
VAR_OUTPUT
	Done								: BOOL;
	Busy								: BOOL;
	CommandAborted						: BOOL;
	Error								: BOOL;
	ErrorID								: UDINT;
END_VAR
VAR
	uiState								: UINT;
	//Input 内部変数
	dutPosition							: DUT_Position;
	lrVelocity							: LREAL;
	lrAcceleration						: LREAL;
	lrDeceleration						: LREAL;
	lrJerk								: LREAL;
	
	//ローカル
	fbFB_Mover							: MC_PlanarFeedback;
	dutTargetPosition					: DUT_POSITION;
	fbConstraint						: DynamicConstraint_PathXY;
	fbMoveA								: FB_MoveA;
	fbMoveB								: FB_MoveB;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[Prop_Execute := Execute;
METH_Main();

fbFB_Mover.Update();

Busy := bBusy;
Done := bDone;
CommandAborted := bCommandAborted;
Error := bError;
ErrorID := udiErrorID;]]></ST>
    </Implementation>
    <Method Name="METH_Busy" Id="{b71d6ce5-7315-458f-bf9f-2f850c8a96ed}">
      <Declaration><![CDATA[//{error 'add method implementation or delete method to use base implementation'}
METHOD METH_Busy : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF fbFB_Mover.Error THEN
	METH_Error();
	Prop_ErrorID := fbFB_Mover.ErrorId; //Moverがエラー
	RETURN;
END_IF
IF THIS^.fbMover.MCTOPLC.STD.State = MC_PLANAR_STATE.Error THEN
	METH_Error();
	Prop_ErrorID := 1; //Moverがエラー
	RETURN;
END_IF
IF fbFB_Mover.Aborted THEN
	METH_CommandAborted();
	RETURN;
END_IF

CASE THIS^.uiState OF
	0:
	//+Aに傾ける
	dutTargetPosition.a := dutPosition.a;
	fbMoveA(
		fbMover:= THIS^.fbMover, 
		Execute:= TRUE, 
		Position:= dutTargetPosition, 
		Velocity:= THIS^.lrVelocity, 
		Acceleration:= THIS^.lrAcceleration, 
		Deceleration:= THIS^.lrDeceleration, 
		Jerk:= THIS^.lrJerk);
	IF fbMoveA.Done THEN
		fbMoveA(fbMover:= THIS^.fbMover, Execute:= FALSE);
		THIS^.uiState := 10;
	ELSIF fbMoveA.Error THEN
		METH_Error();
		Prop_ErrorID := 10; //Moverがエラー
	END_IF
	
	10:
	//+Bに傾ける
	dutTargetPosition.b := dutPosition.b;
	fbMoveB(
		fbMover:= THIS^.fbMover, 
		Execute:= TRUE, 
		Position:= dutTargetPosition, 
		Velocity:= THIS^.lrVelocity, 
		Acceleration:= THIS^.lrAcceleration, 
		Deceleration:= THIS^.lrDeceleration, 
		Jerk:= THIS^.lrJerk);
	IF fbMoveB.Done THEN
		fbMoveB(fbMover:= THIS^.fbMover, Execute:= FALSE);
		THIS^.uiState := 20;
	ELSIF fbMoveB.Error THEN
		METH_Error();
		Prop_ErrorID := 11; //Moverがエラー
	END_IF
	
	20:
	//-Aに傾ける
	dutTargetPosition.a := -1*dutPosition.a;
	fbMoveA(
		fbMover:= THIS^.fbMover, 
		Execute:= TRUE, 
		Position:= dutTargetPosition, 
		Velocity:= THIS^.lrVelocity, 
		Acceleration:= THIS^.lrAcceleration, 
		Deceleration:= THIS^.lrDeceleration, 
		Jerk:= THIS^.lrJerk);
	IF fbMoveA.Done THEN
		fbMoveA(fbMover:= THIS^.fbMover, Execute:= FALSE);
		THIS^.uiState := 30;
	ELSIF fbMoveA.Error THEN
		METH_Error();
		Prop_ErrorID := 12; //Moverがエラー
	END_IF
	
	30:
	//+Bに傾ける
	dutTargetPosition.b := -1*dutPosition.b;
	fbMoveB(
		fbMover:= THIS^.fbMover, 
		Execute:= TRUE, 
		Position:= dutTargetPosition, 
		Velocity:= THIS^.lrVelocity, 
		Acceleration:= THIS^.lrAcceleration, 
		Deceleration:= THIS^.lrDeceleration, 
		Jerk:= THIS^.lrJerk);
	IF fbMoveB.Done THEN
		fbMoveB(fbMover:= THIS^.fbMover, Execute:= FALSE);
		THIS^.uiState := 40;
	ELSIF fbMoveB.Error THEN
		METH_Error();
		Prop_ErrorID := 13; //Moverがエラー
	END_IF
	
	40:
	//0に戻す
	dutTargetPosition.a := 0;
	fbMoveA(
		fbMover:= THIS^.fbMover, 
		Execute:= TRUE, 
		Position:= dutTargetPosition, 
		Velocity:= THIS^.lrVelocity, 
		Acceleration:= THIS^.lrAcceleration, 
		Deceleration:= THIS^.lrDeceleration, 
		Jerk:= THIS^.lrJerk);
	IF fbMoveA.Done THEN
		fbMoveA(fbMover:= THIS^.fbMover, Execute:= FALSE);
		THIS^.uiState := 50;
	ELSIF fbMoveA.Error THEN
		METH_Error();
		Prop_ErrorID := 14; //Moverがエラー
	END_IF
	
	50:
	//0に戻す
	dutTargetPosition.b := 0;
	fbMoveB(
		fbMover:= THIS^.fbMover, 
		Execute:= TRUE, 
		Position:= dutTargetPosition, 
		Velocity:= THIS^.lrVelocity, 
		Acceleration:= THIS^.lrAcceleration, 
		Deceleration:= THIS^.lrDeceleration, 
		Jerk:= THIS^.lrJerk);
	IF fbMoveB.Done THEN
		fbMoveB(fbMover:= THIS^.fbMover, Execute:= FALSE);
		THIS^.uiState := 16#FFFF;
	ELSIF fbMoveB.Error THEN
		METH_Error();
		Prop_ErrorID := 15; //Moverがエラー
	END_IF
	
	16#FFFF:
	METH_Done();
END_CASE]]></ST>
      </Implementation>
    </Method>
    <Method Name="METH_Enter" Id="{e0a997bf-4490-4cb1-8dc6-47731c5d3a2f}">
      <Declaration><![CDATA[//{error 'add method implementation or delete method to use base implementation'}
METHOD METH_Enter : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[//Input 内部変数に移す
dutPosition := Position;
lrVelocity := Velocity;
lrAcceleration := Acceleration;
lrDeceleration := Deceleration;
lrJerk := Jerk;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="METH_Exit" Id="{5ebf48cd-f673-4105-9443-680ea433f315}">
      <Declaration><![CDATA[//{error 'add method implementation or delete method to use base implementation'}
METHOD METH_Exit : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Prop_Done := FALSE;
Prop_Busy := FALSE;
Prop_CommandAborted := FALSE;
Prop_Error := FALSE;
Prop_ErrorID := 0;

// 内部変数をリフレッシュする
uiState := 0;
lrVelocity := 0;
lrAcceleration := 0;
lrDeceleration := 0;
lrJerk := 0;]]></ST>
      </Implementation>
    </Method>
    <Method Name="METH_Main" Id="{ee7b18dc-6048-4144-9448-64e8a3fe7836}">
      <Declaration><![CDATA[//{error 'add method implementation or delete method to use base implementation'}
METHOD METH_Main : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[//Doneに遷移
IF SUPER^.bDone AND SUPER^.bExecute THEN
	METH_Done();
	RETURN;
END_IF
//Errorに遷移
IF SUPER^.bError AND SUPER^.bExecute THEN
	METH_Error();
	RETURN;
END_IF
//CommandAbortedに遷移
IF SUPER^.bCommandAborted AND SUPER^.bExecute THEN
	METH_CommandAborted();
	RETURN;
END_IF
//FBをリフレッシュ
//状態がDone, Error, CommandAborted時に Execute FALSE で遷移
IF (SUPER^.bDone OR SUPER^.bError OR SUPER^.bCommandAborted) AND NOT SUPER^.bExecute THEN
	METH_Exit();
	RETURN;
END_IF

//実行開始
IF SUPER^.bExecute AND NOT SUPER^.bBusy THEN
	METH_Execute();
	METH_Enter();
END_IF
//実行中
IF SUPER^.bBusy THEN
	METH_Busy();
END_IF]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_Tilt_AB">
      <LineId Id="42" Count="8" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_Tilt_AB.METH_Busy">
      <LineId Id="5" Count="17" />
      <LineId Id="159" Count="0" />
      <LineId Id="23" Count="16" />
      <LineId Id="110" Count="0" />
      <LineId Id="178" Count="0" />
      <LineId Id="111" Count="13" />
      <LineId Id="55" Count="2" />
      <LineId Id="95" Count="0" />
      <LineId Id="179" Count="0" />
      <LineId Id="96" Count="13" />
      <LineId Id="73" Count="2" />
      <LineId Id="125" Count="0" />
      <LineId Id="180" Count="0" />
      <LineId Id="126" Count="13" />
      <LineId Id="91" Count="0" />
      <LineId Id="140" Count="0" />
      <LineId Id="142" Count="1" />
      <LineId Id="181" Count="0" />
      <LineId Id="158" Count="0" />
      <LineId Id="145" Count="12" />
      <LineId Id="141" Count="0" />
      <LineId Id="160" Count="0" />
      <LineId Id="162" Count="1" />
      <LineId Id="182" Count="0" />
      <LineId Id="164" Count="13" />
      <LineId Id="161" Count="0" />
      <LineId Id="92" Count="2" />
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="FB_Tilt_AB.METH_Enter">
      <LineId Id="5" Count="5" />
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="FB_Tilt_AB.METH_Exit">
      <LineId Id="5" Count="7" />
      <LineId Id="14" Count="2" />
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="FB_Tilt_AB.METH_Main">
      <LineId Id="5" Count="29" />
      <LineId Id="4" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>